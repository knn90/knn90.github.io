<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SwiftUI on knxCode</title>
    <link>https://knn90.github.io/tags/swiftui/</link>
    <description>Recent content in SwiftUI on knxCode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 19 Nov 2024 19:18:21 +0700</lastBuildDate><atom:link href="https://knn90.github.io/tags/swiftui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[iOS] Enhance User Experience with Smooth Transitions in SwiftUI using AnimatedToastView</title>
      <link>https://knn90.github.io/posts/ios/animatedtoastview/</link>
      <pubDate>Tue, 19 Nov 2024 19:18:21 +0700</pubDate>
      
      <guid>https://knn90.github.io/posts/ios/animatedtoastview/</guid>
      <description>AnimatedToastView enhances SwiftUI applications by automating view transitions with smooth animations. By customizing the duration and leveraging various transition effects.
Code Overview Here&amp;rsquo;s the implementation and usage of AnimatedToastView:
struct AnimatedToastView&amp;lt;Content: View&amp;gt;: View { @State private var isVisible: Bool = false private let content: () -&amp;gt; Content private let displayDuration: CGFloat init(displayDuration: CGFloat, @ViewBuilder content: @escaping () -&amp;gt; Content) { self.displayDuration = displayDuration self.content = content } var body: some View { VStack { if isVisible { content() } } .</description>
    </item>
    
  </channel>
</rss>
